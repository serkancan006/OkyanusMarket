  <!-- tabs -->
<script src="~/web/js/easyResponsiveTabs.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#horizontalTab').easyResponsiveTabs({
            type: 'default', //Types: default, vertical, accordion
            width: 'auto', //auto or any width like 600px
            fit: true   // 100% fit in a container
        });
    });
</script>
<!-- //tabs -->
<!-- smooth scrolling -->
<script type="text/javascript">
    $(function () {
        /*
            var defaults = {
            containerID: 'toTop', // fading element id
            containerHoverID: 'toTopHover', // fading element hover id
            scrollSpeed: 1200,
            easingType: 'linear'
            };
        */
        $().UItoTop({ easingType: 'easeOutQuart' });
    });
</script>

<a href="#" id="toTop" style="display: block;"> <span id="toTopHover" style="opacity: 1;"> </span></a>
<!-- //smooth scrolling -->
<!-- for bootstrap working -->
<script src="~/web/js/bootstrap.js"></script>
<!-- //for bootstrap working -->
@*<script type='text/javascript' src="~/web/js/jquery.mycart.js"></script>*@

@await Component.InvokeAsync("Notyf")

<script src="~/lib/sweetalert2/dist/sweetalert2.min.js"></script>




@*<script type="text/javascript">
    'use strict';

    let filteredParameters = {
        PageNumber: 1,
        PageSize: 20,
        SearchName: undefined,
        MarkaAdi: undefined,
        CategoryName: undefined,
        sortField: undefined,
    };
    let totalCount;
    let totalPages;

    function getProducts() {
        $.ajax({
            url: '/Product/GetProducts',
            type: 'GET',
            data: filteredParameters,
            success: function (data) {
                //console.log(data);
                // Verileri işleme
                let products = data.product;
                totalCount = data.totalCount;
                totalPages = data.totalPages;

                let htmlContent = '';
                let htmlContent2 = '';
                products.forEach(function (item) {
                    htmlContent += `<div class="col-md-3 pro-1">
                                <div class="col-m">
                                    <a onclick="openProductDetailModal(${item.id})" data-toggle="modal" data-target="#productDetailModal" class="offer-img">
                                        <img src="${item.imageUrl ? item.imageUrl : "/web/images/resimhazirlaniyor.png"}" class="img-responsive" alt="">
                                        ${item.discountedPrice ? '<div class="offer"><p><span>İndirimde</span></p></div>' : ''}
                                    </a>
                                    <div class="mid-1">
                                        <div class="women">
                                            <h6>${item.productName.length > 20 ? item.productName.substring(0, 13) : item.productName}</h6>
                                        </div>
                                        <div class="mid-2">
                                            ${item.discountedPrice ? '<p><label>₺' + item.price + '</label><em class="item_price">₺' + item.discountedPrice + '</em></p>' : '<p><em class="item_price">₺' + item.price + '</em></p>'}
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="add add-2">
                                        <button class="btn btn-danger my-cart-btn my-cart-b" onclick="addBasket(${item.id})">Sepete Ekle</button>
                                        </div>
                                    </div>
                                </div>
                            </div>`;
                });
                $('#productsContainer').html(htmlContent);
                createPagination();
            },
            error: function (err) {
                //console.error("Ajax hata olustu!", err);
            }
        });
    }

    $(document).ready(function () {
        let currentUrl = window.location.href;

        // URL'deki deseni kontrol et
        if (currentUrl === "https://localhost:7077/Product/Index/") {
            filteredParameters.SearchName = undefined;
        } else {
            let url = new URL(currentUrl);
            let searchParams = new URLSearchParams(url.search);
            let searchName = decodeURIComponent(searchParams.get("search"));

            if (searchName == null) {
                filteredParameters.SearchName = undefined;
            } else {
                filteredParameters.SearchName = searchName;
            }
        }

        //console.log(filteredParameters.SearchName);
        getProducts();
        createProductSidebar();
    });



    function createPagination() {
        let paginationhtmlContent = '';
        paginationhtmlContent += '<ul class="pagination pagination-lg">';
        paginationhtmlContent += '<li><a onclick="changePage(1)" aria-label="Previous"><span aria-hidden="true">«</span></a></li>';

        let startPage = 1;
        let endPage = totalPages > 5 ? 5 : totalPages;

        if (totalPages > 5) {
            if (filteredParameters.PageNumber <= 3) {
                endPage = 5;
            } else if (filteredParameters.PageNumber + 2 >= totalPages) {
                startPage = totalPages - 4;
                endPage = totalPages;
            } else {
                startPage = filteredParameters.PageNumber - 2;
                endPage = filteredParameters.PageNumber + 2;
            }
        }

        for (let i = startPage; i <= endPage; i++) {
            if (i === filteredParameters.PageNumber) {
                paginationhtmlContent += `<li class="active"><a onclick="changePage(${i})">${i}</a></li>`;
            } else {
                paginationhtmlContent += `<li><a onclick="changePage(${i})">${i}</a></li>`;
            }
        }

        paginationhtmlContent += '<li><a onclick="changePage(totalPages)" aria-label="Next"><span aria-hidden="true">»</span></a></li>';
        paginationhtmlContent += '</ul>';
        $('#paginationContainer').html(paginationhtmlContent);
    }


    function changePage(number) {
        filteredParameters.PageNumber = number;
        getProducts();
    }

    function createProductSidebar(id = null) {
        //GetCategorySidebarComponent
        $.ajax({
            url: '/Group/GetCategorySidebarComponent?categoryID=' + id,
            type: 'GET',
            success: function (data) {
                //console.log(data);
                $('#dynamicCategoryCompContainer').html(data);
            },
            error: function (err) {
                //console.error("Ajax hata olustu!", err);
            }
        });
    }

</script>


<script>
    function filteredProductName() {
        let searchName = $('#productSearchName').val();
        if (searchName) {
            let newUrl = "/Product/Index?search=" + encodeURIComponent(searchName);
            window.location.href = newUrl;
        }
        //filteredParameters.SearchName = $('#productSearchName').val();
        //getProducts();
    }
</script>

<script>
    function filteredProductName2() {
        filteredParameters.SearchName = $('#productSearchName2').val();
        getProducts();
        //$('#productSearchName2').val('');
    }
    function filteredMarka() {
        filteredParameters.MarkaAdi = $('#productMarkaName').val();
        getProducts();
    }
    function filteredProductCategory(categoryName, id) {
        filteredParameters.CategoryName = categoryName;
        getProducts();
        createProductSidebar(id)
    }

</script>



<script>
    function filteredSort() {
        let param = $('#sortBy').val();
        filteredParameters.sortField = param;
        getProducts();
        //console.log(param);
    }
</script>*@