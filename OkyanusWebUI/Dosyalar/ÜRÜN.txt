DROP TABLE MAIN.MASK0001 CASCADE CONSTRAINTS;

CREATE TABLE MAIN.MASK0001
(
  EMTIANO               VARCHAR2(16 BYTE),
  EMTIAAD               VARCHAR2(50 BYTE),
  KISAAD                VARCHAR2(35 BYTE),
  ETIKETAD              VARCHAR2(50 BYTE),
  YABAD                 VARCHAR2(50 BYTE),
  AD1                   VARCHAR2(50 BYTE),
  AD2                   VARCHAR2(50 BYTE),
  AD3                   VARCHAR2(50 BYTE),
  AD4                   VARCHAR2(50 BYTE),
  AD5                   VARCHAR2(50 BYTE),
  AD6                   VARCHAR2(50 BYTE),
  ANAGRUP               VARCHAR2(4 BYTE),
  ALTGRUP1              VARCHAR2(4 BYTE),
  ALTGRUP2              VARCHAR2(4 BYTE),
  ALTGRUP3              VARCHAR2(4 BYTE),
  TBIRGRUP              NUMBER(2),
  TBIRIM                VARCHAR2(4 BYTE),
  TASIUCR               NUMBER(17,3),
  TASDOVKOD             VARCHAR2(4 BYTE),
  EMTIATIPI             NUMBER(3),
  TEMSUR                NUMBER(3),
  RESFIROR              NUMBER(5,2),
  DOGFIROR              NUMBER(5,2),
  TERPLU                NUMBER(5),
  POSPLU                VARCHAR2(5 BYTE),
  INSERTNO              NUMBER(4),
  KDVFARKLI             CHAR(1 BYTE),
  URETYER               NUMBER(7),
  TALINO1               NUMBER(2),
  URETIL                CHAR(20 BYTE),
  IMALKOD               CHAR(1 BYTE),
  MAMULNO               VARCHAR2(16 BYTE),
  DOVAKOD               VARCHAR2(4 BYTE),
  DOVSKOD               VARCHAR2(4 BYTE),
  GTIPNO                VARCHAR2(18 BYTE),
  AKTIF                 NUMBER(1),
  INP_USER              VARCHAR2(30 BYTE),
  INP_DATE              DATE,
  UPD_USER              VARCHAR2(30 BYTE),
  UPD_DATE              DATE,
  TASBIRIM              VARCHAR2(4 BYTE),
  AKDVNO                NUMBER(3),
  SKDVNO                NUMBER(3),
  LBIRMIK               NUMBER(15,3),
  VERIADE               NUMBER(1),
  FDEGYER               VARCHAR2(2 BYTE),
  EMTIACINS             VARCHAR2(1 BYTE),
  BARTAKIP              VARCHAR2(1 BYTE),
  EMNIYETGUNU           NUMBER(3),
  RAFOMRU               NUMBER(4),
  INDIRKOD              VARCHAR2(1 BYTE),
  MMIKTAR               NUMBER(17,3),
  POSKASA               NUMBER(1),
  TERBIL                VARCHAR2(100 BYTE),
  DEPTNO                NUMBER(2),
  OZELKOD               VARCHAR2(50 BYTE),
  PUAN                  NUMBER(13,3),
  STOKYERI              VARCHAR2(1 BYTE),
  ONAYNO                NUMBER(2),
  MINKARMAR             NUMBER(5,2),
  MAXKARMAR             NUMBER(5,2),
  AKTIVITE              VARCHAR2(1 BYTE),
  REYONNO               NUMBER(3),
  KARMAR                NUMBER(5,2),
  FIYAT_ISTE            NUMBER(1),
  SIPKONTGRP            NUMBER(3),
  SIPSIZKABUL           VARCHAR2(1 BYTE),
  INSERTREF             VARCHAR2(30 BYTE),
  HOZELKOD              VARCHAR2(50 BYTE),
  HEDEFALISFIYAT        NUMBER(15,3),
  MLRECNO               NUMBER(5),
  ALTREYONNO            NUMBER(3),
  SATALSAY              NUMBER(2),
  PROMDISI              NUMBER(1),
  YEMEKCEKI             NUMBER(1),
  ESD_EMTIANO           VARCHAR2(16 BYTE),
  B2BSTOK_KODU          VARCHAR2(50 BYTE),
  URETICI_FIRMA         VARCHAR2(200 BYTE),
  URETICI_FIRMA_ADRESI  VARCHAR2(200 BYTE),
  URUN_ICERIK           VARCHAR2(200 BYTE),
  SAKLAMA_KOSULLARI     VARCHAR2(200 BYTE),
  TKIB_IZIN_BILGISI     VARCHAR2(200 BYTE),
  KOSUL_KODU1           VARCHAR2(50 BYTE),
  KOSUL_KODU2           VARCHAR2(50 BYTE),
  KOSUL_KODU3           VARCHAR2(50 BYTE),
  KKDVNO                NUMBER(3),
  SEZON                 VARCHAR2(50 BYTE),
  MEVSIM                VARCHAR2(50 BYTE),
  BEDEN                 VARCHAR2(50 BYTE),
  MARKA                 VARCHAR2(50 BYTE),
  MODEL                 VARCHAR2(50 BYTE),
  RENK                  VARCHAR2(50 BYTE),
  CINSIYET              VARCHAR2(50 BYTE),
  TURU                  VARCHAR2(50 BYTE)
)
TABLESPACE STOK
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE;


CREATE UNIQUE INDEX MAIN.PKSK0001 ON MAIN.MASK0001
(EMTIANO)
LOGGING
TABLESPACE USER_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX MAIN.UQSK2001 ON MAIN.MASK0001
(EMTIANO, TBIRGRUP)
LOGGING
TABLESPACE USER_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE MAIN.MASK0001 ADD (
  CONSTRAINT CKSK0001_AKTIF
  CHECK (AKTIF IN (0,1,2))
  ENABLE VALIDATE
,  CONSTRAINT CKSK0001_BARTAKIP
  CHECK (BARTAKIP IN ('E','H'))
  ENABLE VALIDATE
,  CONSTRAINT CKSK0001_EMTIACINS
  CHECK (EMTIACINS BETWEEN '0' AND '9')
  ENABLE VALIDATE
,  CONSTRAINT CKSK0001_FDEGYER
  CHECK (FDEGYER IN ('MG','MR'))
  ENABLE VALIDATE
,  CONSTRAINT CKSK0001_IMALKOD
  CHECK (IMALKOD IN ('E','H'))
  ENABLE VALIDATE
,  CONSTRAINT CKSK0001_SATALSAY
  CHECK (SATALSAY <= 1)
  ENABLE VALIDATE
,  CONSTRAINT SYS_C003672
  CHECK ("KISAAD" IS NOT NULL)
  ENABLE VALIDATE
,  CONSTRAINT SYS_C003673
  CHECK ("ETIKETAD" IS NOT NULL)
  ENABLE VALIDATE
,  CONSTRAINT SYS_C006336
  CHECK ("KISAAD" IS NOT NULL)
  ENABLE VALIDATE
,  CONSTRAINT SYS_C006337
  CHECK ("ETIKETAD" IS NOT NULL)
  ENABLE VALIDATE
,  CONSTRAINT PKSK0001
  PRIMARY KEY
  (EMTIANO)
  USING INDEX MAIN.PKSK0001
  ENABLE VALIDATE
,  CONSTRAINT UQPLUSK2001
  UNIQUE (POSPLU)
  USING INDEX MAIN.IXPLUSK0001
  ENABLE VALIDATE
,  CONSTRAINT UQSK2001
  UNIQUE (EMTIANO, TBIRGRUP)
  USING INDEX MAIN.UQSK2001
  ENABLE VALIDATE);


CREATE INDEX MAIN.IDX_MASK0001_1 ON MAIN.MASK0001
(OZELKOD, EMTIANO)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
PARALLEL ( DEGREE 16 INSTANCES 1 );

CREATE INDEX MAIN.IDX$_MASK0001_10004 ON MAIN.MASK0001
(TO_NUMBER("EMTIANO"), AKTIF)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IDX$$_00010005 ON MAIN.MASK0001
(TO_NUMBER("EMTIANO"), EMTIANO, TBIRIM)
LOGGING
TABLESPACE USER_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IDX$$_1SK0001 ON MAIN.MASK0001
(ALTGRUP3, ALTGRUP2, ALTGRUP1, ANAGRUP, EMTIANO)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IDX$$_2SK0001 ON MAIN.MASK0001
(ALTGRUP1, ANAGRUP, EMTIANO)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IDX$$_3SK0001 ON MAIN.MASK0001
(ALTGRUP2, ALTGRUP1, ANAGRUP, EMTIANO)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXAD1SK0001 ON MAIN.MASK0001
(AD1)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXANLZSK0001 ON MAIN.MASK0001
(SUBSTR("EMTIANO",-1,1), AKTIF, INP_DATE)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXPLUSK0001 ON MAIN.MASK0001
(POSPLU)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXRYSK0001 ON MAIN.MASK0001
(REYONNO)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSKCNS1 ON MAIN.MASK0001
(TO_NUMBER("EMTIACINS"))
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK0001_HOZELKOD ON MAIN.MASK0001
(HOZELKOD)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK1001 ON MAIN.MASK0001
(EMTIAAD)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK1001N ON MAIN.MASK0001
(NLSSORT("EMTIAAD",'nls_sort=''TURKISH'''))
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK2001 ON MAIN.MASK0001
(ANAGRUP, ALTGRUP1, ALTGRUP2, ALTGRUP3)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK3001 ON MAIN.MASK0001
(ANAGRUP, ALTGRUP1, ALTGRUP2)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK4001 ON MAIN.MASK0001
(ANAGRUP, ALTGRUP1)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK5001 ON MAIN.MASK0001
(ANAGRUP)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK9001 ON MAIN.MASK0001
(UPPER("EMTIAAD"))
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IXSK9001N ON MAIN.MASK0001
(NLSSORT(UPPER("EMTIAAD"),'nls_sort=''TURKISH'''))
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.IX9SK0001 ON MAIN.MASK0001
(SUBSTR("EMTIANO",-1,1))
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX MAIN.MASK0001_IDX$$_0002 ON MAIN.MASK0001
(OZELKOD, EMTIANO, ETIKETAD)
LOGGING
TABLESPACE ALL_INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP SEQUENCE MAIN.SQSKULG4;

CREATE SEQUENCE MAIN.SQSKULG4
  START WITH 97171
  MAXVALUE 999999
  MINVALUE 1
  CYCLE
  CACHE 10
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE MAIN.SQSKULG5;

CREATE SEQUENCE MAIN.SQSKULG5
  START WITH 1
  MAXVALUE 999999
  MINVALUE 1
  CYCLE
  CACHE 10
  NOORDER
  NOKEEP
  GLOBAL;


CREATE OR REPLACE TRIGGER MAIN.R1SK0001
BEFORE INSERT OR UPDATE OR DELETE ON MAIN.MASK0001
FOR EACH ROW
DECLARE
  QEMTIANO VARCHAR2(16);
  WVAR  NUMBER;
  CURSOR C_MASK0031 IS SELECT SIRKETNO,EMTIANO FROM MASK0031 WHERE EMTIANO = QEMTIANO AND AKTIF = 1;

  CURSOR C_TAGE0024 IS SELECT BIRIMNO,SIRKETNO FROM TAGE0024 WHERE BIRIMTIPI = 'MM';

  R C_MASK0031%ROWTYPE;
  WDEGTAR DATE := NULL;
  WPROMDISI1  NUMBER(1);
  WPROMDISI2  NUMBER(1);
  WPROMDISI3  NUMBER(1);
  WPROMDISI4  NUMBER(1);
  WINDIRKOD NUMBER(1) := NULL;
  WRECTIPI  VARCHAR2(1);
BEGIN
  IF INSERTING OR (UPDATING AND (NVL(:NEW.MLRECNO,0) <> NVL(:OLD.MLRECNO,0))) THEN
     IF :NEW.MLRECNO > 0 THEN
        SELECT RECTIPI INTO WRECTIPI FROM MASK0017 WHERE RECNO = :NEW.MLRECNO;
        IF WRECTIPI = 'P' THEN
           RAISE_APPLICATION_ERROR (-20001,'Stok kartına tanımlanacak maliyet reçete tipi Parçalama/Ayrıştırma tipinde olamaz.');
        END IF;
     END IF;
  END IF;

  IF UPDATING OR INSERTING THEN
     IF :NEW.EMTIAAD LIKE '%<%' OR :NEW.EMTIAAD LIKE '%>%' OR :NEW.EMTIAAD LIKE '%{%' OR :NEW.EMTIAAD LIKE '%}%'  OR :NEW.EMTIAAD LIKE '%''%' THEN
         RAISE_APPLICATION_ERROR (-20001,'Ürün Adı değerinde <>{}'' karakterleri kullanılamaz');
     END IF;

     BEGIN
       SELECT 1 INTO WVAR FROM TAGE0008 WHERE ANAGRUP = :NEW.ANAGRUP AND ALTGRUP1 = :NEW.ALTGRUP1 AND ALTGRUP2 = :NEW.ALTGRUP2 AND ALTGRUP3 = :NEW.ALTGRUP3;
     EXCEPTION WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR (-20001,'Ürünü bağladığınız grup tanımı bulunamadı...');
     END;
  END IF;

  IF UPDATING AND (:NEW.ANAGRUP <> :OLD.ANAGRUP OR :NEW.ALTGRUP1 <> :OLD.ALTGRUP1 OR :NEW.ALTGRUP2 <> :OLD.ALTGRUP2 OR :NEW.ALTGRUP3 <> :OLD.ALTGRUP3) THEN
     UPDATE TASK0037 SET ANAGRUP = :NEW.ANAGRUP,ALTGRUP1 = :NEW.ALTGRUP1,ALTGRUP2 = :NEW.ALTGRUP2,ALTGRUP3 = :NEW.ALTGRUP3
     WHERE EMTIANO = :NEW.EMTIANO;
  END IF;

  IF INSERTING OR UPDATING THEN
     IF :NEW.ALTREYONNO IS NULL THEN
        SELECT MIN(ALTREYONNO) INTO :NEW.ALTREYONNO FROM TAGEA003 WHERE REYONNO = :NEW.REYONNO;
     END IF;

     BEGIN SELECT PROMDISI INTO WPROMDISI1 FROM TAGE0008 WHERE ANAGRUP = :NEW.ANAGRUP AND ALTGRUP1 = :NEW.ALTGRUP1 AND ALTGRUP2 = :NEW.ALTGRUP2 AND ALTGRUP3 = :NEW.ALTGRUP3 AND GRUPTIPI = 4; EXCEPTION WHEN NO_DATA_FOUND THEN NULL; END ;
     BEGIN SELECT PROMDISI INTO WPROMDISI2 FROM TAGE0008 WHERE ANAGRUP = :NEW.ANAGRUP AND ALTGRUP1 = :NEW.ALTGRUP1 AND ALTGRUP2 = :NEW.ALTGRUP2 AND GRUPTIPI = 3; EXCEPTION WHEN NO_DATA_FOUND THEN NULL; END ;
     BEGIN SELECT PROMDISI INTO WPROMDISI3 FROM TAGE0008 WHERE ANAGRUP = :NEW.ANAGRUP AND ALTGRUP1 = :NEW.ALTGRUP1 AND GRUPTIPI = 2; EXCEPTION WHEN NO_DATA_FOUND THEN NULL; END ;
     BEGIN SELECT PROMDISI INTO WPROMDISI4 FROM TAGE0008 WHERE ANAGRUP = :NEW.ANAGRUP AND GRUPTIPI = 1; EXCEPTION WHEN NO_DATA_FOUND THEN NULL; END ;
     IF WPROMDISI1 = 1 OR WPROMDISI2 = 1 OR WPROMDISI3 = 1 OR WPROMDISI4 = 1 THEN
        :NEW.PROMDISI := 1;
     ELSE
        :NEW.PROMDISI := 0;
     END IF;
  END IF;

  IF UPDATING AND NVL(:OLD.SATALSAY,0) <> NVL(:NEW.SATALSAY,0) THEN RETURN; END IF;

  IF UPDATING AND :OLD.AKTIF = 1 AND :NEW.AKTIF <> 1 THEN
     BEGIN
       SELECT 1 INTO WVAR FROM DESKU004
        WHERE EMTIANO = :NEW.EMTIANO AND RAFNO > 0 AND SIRANO > 0 AND ONYUZSAY > 0 AND YUKSEKLIKSAY > 0 AND DERINLIKSAY > 0 AND SILINDI IS NULL AND ROWNUM = 1;
        RAISE_APPLICATION_ERROR (-20001,'Ürün Raf Alan Yönetiminde tanımlı...Lütfe ürünü pasif edebilmek için öncelikle Alan Yönetiminden çıkartınız...[TRG:R1SK0001 - 3]');
     EXCEPTION WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF;

  IF (UPDATING OR INSERTING) AND REPLACE(:NEW.EMTIAAD,'''','`') <> :NEW.EMTIAAD THEN
     :NEW.EMTIAAD := REPLACE(:NEW.EMTIAAD,'''','`');
  END IF;

  IF UPDATING AND :NEW.AKTIF = 2 AND :OLD.AKTIF <> 2 THEN
     QEMTIANO := :NEW.EMTIANO;
     FOR C IN C_TAGE0024 LOOP
       IF WSONSTOK(:NEW.EMTIANO,C.BIRIMNO,TRUNC(SYSDATE)) <> 0 THEN
          RAISE_APPLICATION_ERROR (-20001,C.SIRKETNO||' nolu şirket genelinde '||:NEW.EMTIANO||' nolu ürünün stok miktarı sıfır değil...Ürünü, stok miktarını sıfırlamadan silinecek durumuna getiremezsiniz...[TRG:R1SK0001 - 1]');
       END IF;
     END LOOP;
  END IF;

    IF NOT WSALKONT(:NEW.EMTIANO) THEN
       RAISE_APPLICATION_ERROR (-20001,NVL(:OLD.EMTIANO,:NEW.EMTIANO)||' nolu stok kartında değişiklik yapmaya yetkili değilsiniz...[TRG:R1SK0001 - 2]');
    END IF;

    IF INSERTING OR UPDATING THEN
       QEMTIANO := :NEW.EMTIANO;
       IF :NEW.PROMDISI = 1 AND :NEW.PUAN > 0 THEN :NEW.PUAN := 0; END IF;
       IF NVL(WRECNO(156),'HAYIR') = 'EVET' AND :NEW.STOKYERI = 'H' THEN
       :NEW.STOKYERI := 'M';
--          RAISE_APPLICATION_ERROR(-20001,'[TRG:R1SK0001 - 3] Stoklama Yeri değeri "Belirsiz" olarak seçilemez. (RECNO = 156)');
       END IF;

       IF :NEW.SIPSIZKABUL IS NULL THEN
         IF :NEW.STOKYERI = 'D' AND :NEW.SIPSIZKABUL = 'E' AND NVL(WRECNO(170),'HAYIR') = 'EVET'  THEN :NEW.SIPSIZKABUL := 'H';  END IF;
         IF :NEW.STOKYERI = 'M' AND :NEW.SIPSIZKABUL = 'E' AND NVL(WRECNO(171),'HAYIR') = 'EVET'  THEN :NEW.SIPSIZKABUL := 'H'; END IF;
         IF :NEW.STOKYERI = 'S' AND :NEW.SIPSIZKABUL <> 'E' AND NVL(WRECNO(172),'HAYIR') = 'EVET' THEN :NEW.SIPSIZKABUL := 'E'; END IF;
       END IF;

       IF INSERTING THEN
          BEGIN
            INSERT INTO KREMTIANO(SIRANO,EMTIANO) VALUES (NULL,:NEW.EMTIANO);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN NULL;
          END;
          BEGIN
            INSERT INTO MASKT111(EMTIANO,MAGTIP,SIRKETNO,EMTIACINS) SELECT :NEW.EMTIANO,MAGTIP,SIRKETNO,:NEW.EMTIACINS FROM TAGE0225;
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN NULL;
          END;
          BEGIN
            INSERT INTO MASKS204(SIRKETNO,EMTIANO,EMTIACINS) SELECT SIRKETNO,:NEW.EMTIANO,:NEW.EMTIACINS FROM TAGE0006;
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN NULL;
          END;
--R1SKS204 DE MUTATING VERIYOR.
       END IF;

       IF UPDATING AND :OLD.EMTIACINS <> :NEW.EMTIACINS THEN
          UPDATE MASKT111 SET EMTIACINS = :NEW.EMTIACINS WHERE EMTIANO = :NEW.EMTIANO AND EMTIACINS <> :NEW.EMTIACINS;
          UPDATE MASKS204 SET EMTIACINS = :NEW.EMTIACINS WHERE EMTIANO = :NEW.EMTIANO AND EMTIACINS <> :NEW.EMTIACINS;
       END IF;

       :NEW.EMTIAAD := TRIM(:NEW.EMTIAAD);
       :NEW.KISAAD := TRIM(:NEW.KISAAD);
       IF NVL(:NEW.ANAGRUP,0) <> NVL(:OLD.ANAGRUP,0) OR NVL(:NEW.ALTGRUP1,0) <> NVL(:NEW.ALTGRUP1,0) OR NVL(:NEW.ALTGRUP2,0) <> NVL(:NEW.ALTGRUP2,0) OR NVL(:NEW.ALTGRUP3,0) <> NVL(:NEW.ALTGRUP3,0) THEN
          SELECT INDIRKOD INTO WINDIRKOD FROM TAGE0008 WHERE ANAGRUP = :NEW.ANAGRUP AND ALTGRUP1 = :NEW.ALTGRUP1 AND ALTGRUP2 = :NEW.ALTGRUP2 AND ALTGRUP3 = :NEW.ALTGRUP3 AND ROWNUM = 1;
          :NEW.INDIRKOD := WINDIRKOD;
       END IF;

       IF NVL(:NEW.EMTIACINS,' ') IN ('1','3','6') THEN
          IF INSERTING THEN
	     :NEW.INP_DATE := SYSDATE;
	     :NEW.INP_USER := USER;
             FOR R IN C_MASK0031 LOOP
               INSERT INTO MALGPOS1 (SIRKETNO,EMTIANO,DEGTAR) VALUES (R.SIRKETNO,R.EMTIANO,TRUNC(SYSDATE));
             END LOOP;
          END IF;

          IF UPDATING THEN
	     :NEW.UPD_DATE := TRUNC(SYSDATE);
	     :NEW.UPD_USER := USER;
     	     IF NVL(:NEW.EMTIAAD,' ') <> NVL(:OLD.EMTIAAD,' ') OR
                 NVL(:NEW.KISAAD,' ') <> NVL(:OLD.KISAAD,' ') OR
                 NVL(:NEW.FIYAT_ISTE,0) <> NVL(:OLD.FIYAT_ISTE,0) OR
                 NVL(:NEW.ETIKETAD,' ') <> NVL(:OLD.ETIKETAD,' ') OR
                 NVL(:NEW.AD1,' ') <> NVL(:OLD.AD1,' ') OR           -- Raf Etiketi adı
                 NVL(:NEW.TASBIRIM,' ') <> NVL(:OLD.TASBIRIM,' ') OR -- Raf etiketi basılır flagı
                 NVL(:NEW.TBIRGRUP,0) <> NVL(:OLD.TBIRGRUP,0) OR
                 NVL(:NEW.TBIRIM,' ') <> NVL(:OLD.TBIRIM,' ') OR
                 NVL(:NEW.TERPLU,0) <> NVL(:OLD.TERPLU,0) OR
                 NVL(:NEW.POSPLU,0) <> NVL(:OLD.POSPLU,0) OR
                 NVL(:NEW.SKDVNO,0) <> NVL(:OLD.SKDVNO,0) OR
                 NVL(:NEW.POSKASA,0) <> NVL(:OLD.POSKASA,0) OR
--                 NVL(:NEW.RAFOMRU,0) <> NVL(:OLD.RAFOMRU,0) OR
                 NVL(:NEW.VERIADE,0) <> NVL(:OLD.VERIADE,0) OR
                 NVL(:NEW.OZELKOD,'0') <> NVL(:OLD.OZELKOD,'0') OR
                 NVL(:NEW.HOZELKOD,'0') <> NVL(:OLD.HOZELKOD,'0') OR
                 NVL(:NEW.TERBIL,0) <> NVL(:OLD.TERBIL,0) OR
--                 NVL(:NEW.URETICI_FIRMA,0) <> NVL(:OLD.URETICI_FIRMA,0) OR
--                 NVL(:NEW.URETICI_FIRMA_ADRESI,0) <> NVL(:OLD.URETICI_FIRMA_ADRESI,0) OR
--                 NVL(:NEW.URUN_ICERIK,0) <> NVL(:OLD.URUN_ICERIK,0) OR
 --                NVL(:NEW.SAKLAMA_KOSULLARI,0) <> NVL(:OLD.SAKLAMA_KOSULLARI,0) OR
--                 NVL(:NEW.TKIB_IZIN_BILGISI,0) <> NVL(:OLD.TKIB_IZIN_BILGISI,0) OR
                 NVL(:NEW.EMTIACINS,0) <> NVL(:OLD.EMTIACINS,0) OR
                 NVL(:NEW.INDIRKOD,' ') <> NVL(:OLD.INDIRKOD,' ') OR
                 NVL(:NEW.DEPTNO,-1) <> NVL(:OLD.DEPTNO,-1) OR
                 NVL(:NEW.REYONNO,-1) <> NVL(:OLD.REYONNO,-1) OR
                 NVL(:NEW.AKTIF,0) <> NVL(:OLD.AKTIF,0) OR
                 NVL(:NEW.PUAN,0) <> NVL(:OLD.PUAN,0) OR
                 NVL(:NEW.PROMDISI,0) <> NVL(:OLD.PROMDISI,0) OR
                 NVL(:NEW.YEMEKCEKI,0) <> NVL(:OLD.YEMEKCEKI,0) OR
                 NVL(:NEW.EMTIATIPI,0) <> NVL(:OLD.EMTIATIPI,0) THEN
                 FOR R IN C_MASK0031 LOOP
                   INSERT INTO MALGPOS1(SIRKETNO,EMTIANO,DEGTAR) VALUES (R.SIRKETNO,R.EMTIANO,TRUNC(SYSDATE));
                 END LOOP;
             END IF;
          END IF;
      END IF;
  END IF;
  IF DELETING THEN
     DELETE FROM MASKT111 WHERE EMTIANO = :OLD.EMTIANO;
     QEMTIANO := :OLD.EMTIANO;
     IF NVL(:OLD.EMTIACINS,' ') = '1' THEN
        BEGIN
          DELETE MASKPOS1 WHERE EMTIANO = :OLD.EMTIANO;
        EXCEPTION WHEN NO_DATA_FOUND THEN NULL;
        END;
     END IF;
     DELETE FROM KREMTIANO WHERE EMTIANO = :OLD.EMTIANO;
  END IF;

/*  IF INSERTING THEN
     BEGIN
       SELECT 1 INTO WVAR FROM DESKU004 WHERE REYONNO = :NEW.REYONNO AND ALTREYONNO = :NEW.ALTREYONNO AND ROWNUM = 1;
       INSERT INTO DESKULG4(ID,REYONNO,ALTREYONNO,UNITE,EMTIANO) VALUES (SQSKULG4.NEXTVAL,:NEW.REYONNO,:NEW.ALTREYONNO,NULL,:NEW.EMTIANO);
       WISLE_DESKULG4(:NEW.EMTIANO);
     EXCEPTION WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF; */

  IF UPDATING THEN
     IF :NEW.REYONNO <> :OLD.REYONNO OR :NEW.ALTREYONNO <> :OLD.ALTREYONNO THEN
         BEGIN
           SELECT 1 INTO WVAR FROM DESKU004 WHERE REYONNO = :NEW.REYONNO AND ALTREYONNO = :NEW.ALTREYONNO AND ROWNUM = 1;
           INSERT INTO DESKULG4(ID,REYONNO,ALTREYONNO,UNITE,EMTIANO) VALUES (SQSKULG4.NEXTVAL,:NEW.REYONNO,:NEW.ALTREYONNO,NULL,:NEW.EMTIANO);
           WISLE_DESKULG4(:NEW.EMTIANO);
         EXCEPTION WHEN NO_DATA_FOUND THEN NULL;
         END;
     ELSIF :NEW.STOKYERI <> :OLD.STOKYERI THEN
         BEGIN
           SELECT 1 INTO WVAR FROM DESKU004 WHERE REYONNO = :NEW.REYONNO AND ALTREYONNO = :NEW.ALTREYONNO AND ROWNUM = 1;
           INSERT INTO DESKULG4(ID,REYONNO,ALTREYONNO,UNITE,EMTIANO) VALUES (SQSKULG4.NEXTVAL,:NEW.REYONNO,:NEW.ALTREYONNO,NULL,:NEW.EMTIANO);
         EXCEPTION WHEN NO_DATA_FOUND THEN NULL;
         END;
     END IF ;
  END IF;

END;
/


CREATE OR REPLACE TRIGGER MAIN.R2SK0001
BEFORE INSERT OR UPDATE OR DELETE ON MAIN.MASK0001
FOR EACH ROW
DECLARE
BEGIN
  IF INSERTING OR UPDATING AND :NEW.BARTAKIP = 'E' THEN
     :NEW.BARTAKIP := 'H';
  END IF;

  IF INSERTING THEN
     BEGIN
/*       IF :NEW.EMTIACINS IN (5,6,7,8) THEN  -- Üretim hanelerde sadece Hammadde,Yarı Mamül ve Üretilen Ticari Ürünler Aktif edilsin.
          INSERT INTO MASK0111 (EMTIANO,BIRIMNO,AKTIF) SELECT :NEW.EMTIANO,BIRIMNO,1 FROM TAGE0024 WHERE BIRIMTIPI = 'UR' AND URETIMHANE = 1;
       END IF;

       IF :NEW.EMTIACINS IN (1,2,3,6,8) THEN
          INSERT INTO MASK0111 (EMTIANO,BIRIMNO,AKTIF) SELECT :NEW.EMTIANO,BIRIMNO,1 FROM TAGE0024 WHERE BIRIMTIPI IN ('MA','DD');
          UPDATE MASK0111 SET AKTIF = 0 WHERE EMTIANO = :NEW.EMTIANO AND BIRIMNO IN (SELECT  SLOKSNO FROM TAGESNMG WHERE STOKLOKSNO <> SLOKSNO);
       END IF;
       */

       INSERT INTO MASK0111 (EMTIANO,BIRIMNO,AKTIF) SELECT :NEW.EMTIANO,BIRIMNO,1 FROM TAGE0024 WHERE BIRIMTIPI IN ('MA','DD','UR');
       UPDATE MASK0111 SET AKTIF = 0 WHERE EMTIANO = :NEW.EMTIANO AND BIRIMNO IN (SELECT SLOKSNO FROM TAGESNMG WHERE STOKLOKSNO <> SLOKSNO);
     EXCEPTION
       WHEN DUP_VAL_ON_INDEX THEN
          UPDATE MASK0111 SET AKTIF = 0 WHERE EMTIANO = :NEW.EMTIANO AND BIRIMNO IN (SELECT SLOKSNO FROM TAGESNMG WHERE STOKLOKSNO <> SLOKSNO);
       WHEN OTHERS THEN NULL;
     END;
  END IF;

  IF UPDATING THEN
     IF :OLD.EMTIACINS NOT IN (5,6,7,8) AND :NEW.EMTIACINS IN (5,6,7,8) THEN
         IF :NEW.EMTIACINS NOT IN (6,8) THEN
            UPDATE MASK0111 SET AKTIF = 0 WHERE EMTIANO = :NEW.EMTIANO  AND BIRIMNO IN (SELECT BIRIMNO FROM TAGE0024 WHERE BIRIMTIPI IN ('MA','DD')) AND AKTIF <> 0;
         ELSE
            UPDATE MASK0111 SET AKTIF = 1 WHERE EMTIANO = :NEW.EMTIANO  AND BIRIMNO IN (SELECT BIRIMNO FROM TAGE0024 WHERE BIRIMTIPI IN ('MA','DD')) AND AKTIF <> 1 ;
         END IF;
         UPDATE MASK0111 SET AKTIF = 1 WHERE EMTIANO = :NEW.EMTIANO  AND BIRIMNO IN (SELECT BIRIMNO FROM TAGE0024 WHERE BIRIMTIPI = 'UR') AND AKTIF <> 1;
     END IF;

     IF :OLD.EMTIACINS NOT IN (1,2,3,6,8) AND :NEW.EMTIACINS IN (1,2,3,6,8) THEN
         UPDATE MASK0111 SET AKTIF = 1 WHERE EMTIANO = :NEW.EMTIANO  AND BIRIMNO IN (SELECT BIRIMNO FROM TAGE0024 WHERE BIRIMTIPI IN ('MA','DD')) AND AKTIF <> 1;
         IF :NEW.EMTIACINS NOT IN (6,8) THEN
            UPDATE MASK0111 SET AKTIF = 0 WHERE EMTIANO = :NEW.EMTIANO  AND BIRIMNO IN (SELECT BIRIMNO FROM TAGE0024 WHERE BIRIMTIPI = 'UR') AND AKTIF <> 0;
         ELSE
            UPDATE MASK0111 SET AKTIF = 0 WHERE EMTIANO = :NEW.EMTIANO  AND BIRIMNO IN (SELECT BIRIMNO FROM TAGE0024 WHERE BIRIMTIPI = 'UR') AND AKTIF <> 0;
         END IF;
     END IF;
  END IF;

  IF DELETING THEN
     BEGIN
	DELETE FROM MASK0111 WHERE EMTIANO = :OLD.EMTIANO;
	EXCEPTION WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF;
END;
/


CREATE OR REPLACE TRIGGER MAIN.R3SK0001
AFTER INSERT OR UPDATE OR DELETE ON MAIN.MASK0001
FOR EACH ROW
DECLARE
    WSAYI NUMBER(5) := 0;
BEGIN

--****************************************************
--****  SORUMLU TANIMLARININ OLUSTURULDUGU BOLUM  ****
--****************************************************
    IF INSERTING THEN
       INSERT INTO MASK0205 (EMTIANO,BORDNO,MASTER,BIRIM,BARKOD,REYON,KRITER,KDV,URUNSORUMLUSU) VALUES(:NEW.EMTIANO,99999,0,0,0,0,0,0,0);
       BEGIN
         INSERT INTO DESKULG4(ID,REYONNO,ALTREYONNO,UNITE,EMTIANO) VALUES (SQSKULG4.NEXTVAL,:NEW.REYONNO,:NEW.ALTREYONNO,NULL,:NEW.EMTIANO);
       EXCEPTION WHEN DUP_VAL_ON_INDEX THEN NULL;
       END;
    END IF;

    IF INSERTING THEN
       BEGIN
         INSERT INTO MASK0043 (EMTIANO, BIRIMNO, MAXSTOK, MINSTOK, ORTSAT)
         SELECT :NEW.EMTIANO, BIRIMNO, 0, 0, 0 FROM TAGE0024 WHERE BIRIMTIPI IN ('MA','DD');
      EXCEPTION WHEN DUP_VAL_ON_INDEX THEN NULL;
      END;
    END IF;

END;
/


CREATE OR REPLACE TRIGGER MAIN.R6SK0001
BEFORE UPDATE ON MAIN.MASK0001
FOR EACH ROW
DECLARE
WVAR  NUMBER := 1;
BEGIN
  IF :OLD.EMTIAAD <> :NEW.EMTIAAD OR :OLD.TBIRIM <> :NEW.TBIRIM OR NVL(:OLD.EMTIATIPI,0) <> NVL(:NEW.EMTIATIPI,0) THEN
     UPDATE MASKPOS1 SET ETKDEGIS = SYSDATE WHERE EMTIANO = :NEW.EMTIANO;
  END IF;
END;
/


CREATE OR REPLACE TRIGGER MAIN.R8SK0001
BEFORE INSERT OR UPDATE ON MAIN.MASK0001
FOR EACH ROW
BEGIN
IF INSERTING  THEN
        :NEW.INP_USER := USER;
        :NEW.INP_DATE := SYSDATE;
ELSIF UPDATING  THEN
        :NEW.UPD_USER := USER;
        :NEW.UPD_DATE := SYSDATE;
END IF;
END;
/


DROP SEQUENCE MAIN.TQSK0001;

CREATE SEQUENCE MAIN.TQSK0001
  START WITH 1022501
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 100
  NOORDER
  NOKEEP
  GLOBAL;


CREATE OR REPLACE TRIGGER MAIN.R9SK0001
BEFORE INSERT OR UPDATE OR DELETE ON MAIN.MASK0001
FOR EACH ROW
BEGIN
  IF INSERTING THEN
     INSERT INTO TLSK0001 (DM_NUMBER,DM_TIP,DM_DATE,DM_USER,KARMAR,MAMULNO,DOVAKOD,DOVSKOD,GTIPNO,AKTIF,TASBIRIM,AKDVNO,SKDVNO,LBIRMIK,VERIADE,FDEGYER,EMTIACINS,BARTAKIP,EMNIYETGUNU,RAFOMRU,INDIRKOD,MMIKTAR,POSKASA,TERBIL,DEPTNO,OZELKOD,PUAN,STOKYERI,ONAYNO,MINKARMAR,MAXKARMAR,REYONNO,EMTIANO,EMTIAAD,KISAAD,ETIKETAD,YABAD,AD1,AD2,AD3,AD4,AD5,AD6,ANAGRUP,ALTGRUP1,ALTGRUP2,ALTGRUP3,TBIRGRUP,TBIRIM,TASIUCR,TASDOVKOD,EMTIATIPI,TEMSUR,RESFIROR,DOGFIROR,TERPLU,POSPLU,INSERTNO,KDVFARKLI,URETYER,TALINO1,URETIL,IMALKOD,SIPKONTGRP)
     VALUES (TQSK0001.NEXTVAL,'I',SYSDATE,USER,:NEW.KARMAR,:NEW.MAMULNO,:NEW.DOVAKOD,:NEW.DOVSKOD,:NEW.GTIPNO,:NEW.AKTIF,:NEW.TASBIRIM,:NEW.AKDVNO,:NEW.SKDVNO,:NEW.LBIRMIK,:NEW.VERIADE,:NEW.FDEGYER,:NEW.EMTIACINS,:NEW.BARTAKIP,:NEW.EMNIYETGUNU,:NEW.RAFOMRU,:NEW.INDIRKOD,:NEW.MMIKTAR,:NEW.POSKASA,:NEW.TERBIL,:NEW.DEPTNO,:NEW.OZELKOD,:NEW.PUAN,:NEW.STOKYERI,:NEW.ONAYNO,:NEW.MINKARMAR,:NEW.MAXKARMAR,:NEW.REYONNO,:NEW.EMTIANO,:NEW.EMTIAAD,:NEW.KISAAD,:NEW.ETIKETAD,:NEW.YABAD,:NEW.AD1,:NEW.AD2,:NEW.AD3,:NEW.AD4,:NEW.AD5,:NEW.AD6,:NEW.ANAGRUP,:NEW.ALTGRUP1,:NEW.ALTGRUP2,:NEW.ALTGRUP3,:NEW.TBIRGRUP,:NEW.TBIRIM,:NEW.TASIUCR,:NEW.TASDOVKOD,:NEW.EMTIATIPI,:NEW.TEMSUR,:NEW.RESFIROR,:NEW.DOGFIROR,:NEW.TERPLU,:NEW.POSPLU,:NEW.INSERTNO,:NEW.KDVFARKLI,:NEW.URETYER,:NEW.TALINO1,:NEW.URETIL,:NEW.IMALKOD,:NEW.SIPKONTGRP);
END IF;
  IF UPDATING THEN
     IF WRECNO(133) = 'EVET' AND :NEW.EMTIATIPI <> :OLD.EMTIATIPI THEN RETURN; END IF;
     IF :NEW.EMTIANO <> :OLD.EMTIANO THEN
     INSERT INTO TLSK0001 (DM_NUMBER,DM_TIP,DM_DATE,DM_USER,KARMAR,MAMULNO,DOVAKOD,DOVSKOD,GTIPNO,AKTIF,TASBIRIM,AKDVNO,SKDVNO,LBIRMIK,VERIADE,FDEGYER,EMTIACINS,BARTAKIP,EMNIYETGUNU,RAFOMRU,INDIRKOD,MMIKTAR,POSKASA,TERBIL,DEPTNO,OZELKOD,PUAN,STOKYERI,ONAYNO,MINKARMAR,MAXKARMAR,REYONNO,EMTIANO,EMTIAAD,KISAAD,ETIKETAD,YABAD,AD1,AD2,AD3,AD4,AD5,AD6,ANAGRUP,ALTGRUP1,ALTGRUP2,ALTGRUP3,TBIRGRUP,TBIRIM,TASIUCR,TASDOVKOD,EMTIATIPI,TEMSUR,RESFIROR,DOGFIROR,TERPLU,POSPLU,INSERTNO,KDVFARKLI,URETYER,TALINO1,URETIL,IMALKOD,SIPKONTGRP)
VALUES (TQSK0001.NEXTVAL,'D',SYSDATE,USER,:OLD.KARMAR,:OLD.MAMULNO,:OLD.DOVAKOD,:OLD.DOVSKOD,:OLD.GTIPNO,:OLD.AKTIF,:OLD.TASBIRIM,:OLD.AKDVNO,:OLD.SKDVNO,:OLD.LBIRMIK,:OLD.VERIADE,:OLD.FDEGYER,:OLD.EMTIACINS,:OLD.BARTAKIP,:OLD.EMNIYETGUNU,:OLD.RAFOMRU,:OLD.INDIRKOD,:OLD.MMIKTAR,:OLD.POSKASA,:OLD.TERBIL,:OLD.DEPTNO,:OLD.OZELKOD,:OLD.PUAN,:OLD.STOKYERI,:OLD.ONAYNO,:OLD.MINKARMAR,:OLD.MAXKARMAR,:OLD.REYONNO,:OLD.EMTIANO,:OLD.EMTIAAD,:OLD.KISAAD,:OLD.ETIKETAD,:OLD.YABAD,:OLD.AD1,:OLD.AD2,:OLD.AD3,:OLD.AD4,:OLD.AD5,:OLD.AD6,:OLD.ANAGRUP,:OLD.ALTGRUP1,:OLD.ALTGRUP2,:OLD.ALTGRUP3,:OLD.TBIRGRUP,:OLD.TBIRIM,:OLD.TASIUCR,:OLD.TASDOVKOD,:OLD.EMTIATIPI,:OLD.TEMSUR,:OLD.RESFIROR,:OLD.DOGFIROR,:OLD.TERPLU,:OLD.POSPLU,:OLD.INSERTNO,:OLD.KDVFARKLI,:OLD.URETYER,:OLD.TALINO1,:OLD.URETIL,:OLD.IMALKOD,:OLD.SIPKONTGRP);
     INSERT INTO TLSK0001 (DM_NUMBER,DM_TIP,DM_DATE,DM_USER,KARMAR,MAMULNO,DOVAKOD,DOVSKOD,GTIPNO,AKTIF,TASBIRIM,AKDVNO,SKDVNO,LBIRMIK,VERIADE,FDEGYER,EMTIACINS,BARTAKIP,EMNIYETGUNU,RAFOMRU,INDIRKOD,MMIKTAR,POSKASA,TERBIL,DEPTNO,OZELKOD,PUAN,STOKYERI,ONAYNO,MINKARMAR,MAXKARMAR,REYONNO,EMTIANO,EMTIAAD,KISAAD,ETIKETAD,YABAD,AD1,AD2,AD3,AD4,AD5,AD6,ANAGRUP,ALTGRUP1,ALTGRUP2,ALTGRUP3,TBIRGRUP,TBIRIM,TASIUCR,TASDOVKOD,EMTIATIPI,TEMSUR,RESFIROR,DOGFIROR,TERPLU,POSPLU,INSERTNO,KDVFARKLI,URETYER,TALINO1,URETIL,IMALKOD,SIPKONTGRP)
VALUES (TQSK0001.NEXTVAL,'I',SYSDATE,USER,:NEW.KARMAR,:NEW.MAMULNO,:NEW.DOVAKOD,:NEW.DOVSKOD,:NEW.GTIPNO,:NEW.AKTIF,:NEW.TASBIRIM,:NEW.AKDVNO,:NEW.SKDVNO,:NEW.LBIRMIK,:NEW.VERIADE,:NEW.FDEGYER,:NEW.EMTIACINS,:NEW.BARTAKIP,:NEW.EMNIYETGUNU,:NEW.RAFOMRU,:NEW.INDIRKOD,:NEW.MMIKTAR,:NEW.POSKASA,:NEW.TERBIL,:NEW.DEPTNO,:NEW.OZELKOD,:NEW.PUAN,:NEW.STOKYERI,:NEW.ONAYNO,:NEW.MINKARMAR,:NEW.MAXKARMAR,:NEW.REYONNO,:NEW.EMTIANO,:NEW.EMTIAAD,:NEW.KISAAD,:NEW.ETIKETAD,:NEW.YABAD,:NEW.AD1,:NEW.AD2,:NEW.AD3,:NEW.AD4,:NEW.AD5,:NEW.AD6,:NEW.ANAGRUP,:NEW.ALTGRUP1,:NEW.ALTGRUP2,:NEW.ALTGRUP3,:NEW.TBIRGRUP,:NEW.TBIRIM,:NEW.TASIUCR,:NEW.TASDOVKOD,:NEW.EMTIATIPI,:NEW.TEMSUR,:NEW.RESFIROR,:NEW.DOGFIROR,:NEW.TERPLU,:NEW.POSPLU,:NEW.INSERTNO,:NEW.KDVFARKLI,:NEW.URETYER,:NEW.TALINO1,:NEW.URETIL,:NEW.IMALKOD,:NEW.SIPKONTGRP);
     ELSE
     INSERT INTO TLSK0001 (DM_NUMBER,DM_TIP,DM_DATE,DM_USER,KARMAR,MAMULNO,DOVAKOD,DOVSKOD,GTIPNO,AKTIF,TASBIRIM,AKDVNO,SKDVNO,LBIRMIK,VERIADE,FDEGYER,EMTIACINS,BARTAKIP,EMNIYETGUNU,RAFOMRU,INDIRKOD,MMIKTAR,POSKASA,TERBIL,DEPTNO,OZELKOD,PUAN,STOKYERI,ONAYNO,MINKARMAR,MAXKARMAR,REYONNO,EMTIANO,EMTIAAD,KISAAD,ETIKETAD,YABAD,AD1,AD2,AD3,AD4,AD5,AD6,ANAGRUP,ALTGRUP1,ALTGRUP2,ALTGRUP3,TBIRGRUP,TBIRIM,TASIUCR,TASDOVKOD,EMTIATIPI,TEMSUR,RESFIROR,DOGFIROR,TERPLU,POSPLU,INSERTNO,KDVFARKLI,URETYER,TALINO1,URETIL,IMALKOD,SIPKONTGRP)
VALUES (TQSK0001.NEXTVAL,'U',SYSDATE,USER,:NEW.KARMAR,:NEW.MAMULNO,:NEW.DOVAKOD,:NEW.DOVSKOD,:NEW.GTIPNO,:NEW.AKTIF,:NEW.TASBIRIM,:NEW.AKDVNO,:NEW.SKDVNO,:NEW.LBIRMIK,:NEW.VERIADE,:NEW.FDEGYER,:NEW.EMTIACINS,:NEW.BARTAKIP,:NEW.EMNIYETGUNU,:NEW.RAFOMRU,:NEW.INDIRKOD,:NEW.MMIKTAR,:NEW.POSKASA,:NEW.TERBIL,:NEW.DEPTNO,:NEW.OZELKOD,:NEW.PUAN,:NEW.STOKYERI,:NEW.ONAYNO,:NEW.MINKARMAR,:NEW.MAXKARMAR,:NEW.REYONNO,:NEW.EMTIANO,:NEW.EMTIAAD,:NEW.KISAAD,:NEW.ETIKETAD,:NEW.YABAD,:NEW.AD1,:NEW.AD2,:NEW.AD3,:NEW.AD4,:NEW.AD5,:NEW.AD6,:NEW.ANAGRUP,:NEW.ALTGRUP1,:NEW.ALTGRUP2,:NEW.ALTGRUP3,:NEW.TBIRGRUP,:NEW.TBIRIM,:NEW.TASIUCR,:NEW.TASDOVKOD,:NEW.EMTIATIPI,:NEW.TEMSUR,:NEW.RESFIROR,:NEW.DOGFIROR,:NEW.TERPLU,:NEW.POSPLU,:NEW.INSERTNO,:NEW.KDVFARKLI,:NEW.URETYER,:NEW.TALINO1,:NEW.URETIL,:NEW.IMALKOD,:NEW.SIPKONTGRP);
     END IF;
  END IF;
  IF DELETING THEN
     INSERT INTO TLSK0001 (DM_NUMBER,DM_TIP,DM_DATE,DM_USER,KARMAR,MAMULNO,DOVAKOD,DOVSKOD,GTIPNO,AKTIF,TASBIRIM,AKDVNO,SKDVNO,LBIRMIK,VERIADE,FDEGYER,EMTIACINS,BARTAKIP,EMNIYETGUNU,RAFOMRU,INDIRKOD,MMIKTAR,POSKASA,TERBIL,DEPTNO,OZELKOD,PUAN,STOKYERI,ONAYNO,MINKARMAR,MAXKARMAR,REYONNO,EMTIANO,EMTIAAD,KISAAD,ETIKETAD,YABAD,AD1,AD2,AD3,AD4,AD5,AD6,ANAGRUP,ALTGRUP1,ALTGRUP2,ALTGRUP3,TBIRGRUP,TBIRIM,TASIUCR,TASDOVKOD,EMTIATIPI,TEMSUR,RESFIROR,DOGFIROR,TERPLU,POSPLU,INSERTNO,KDVFARKLI,URETYER,TALINO1,URETIL,IMALKOD,SIPKONTGRP)
VALUES (TQSK0001.NEXTVAL,'D',SYSDATE,USER,:OLD.KARMAR,:OLD.MAMULNO,:OLD.DOVAKOD,:OLD.DOVSKOD,:OLD.GTIPNO,:OLD.AKTIF,:OLD.TASBIRIM,:OLD.AKDVNO,:OLD.SKDVNO,:OLD.LBIRMIK,:OLD.VERIADE,:OLD.FDEGYER,:OLD.EMTIACINS,:OLD.BARTAKIP,:OLD.EMNIYETGUNU,:OLD.RAFOMRU,:OLD.INDIRKOD,:OLD.MMIKTAR,:OLD.POSKASA,:OLD.TERBIL,:OLD.DEPTNO,:OLD.OZELKOD,:OLD.PUAN,:OLD.STOKYERI,:OLD.ONAYNO,:OLD.MINKARMAR,:OLD.MAXKARMAR,:OLD.REYONNO,:OLD.EMTIANO,:OLD.EMTIAAD,:OLD.KISAAD,:OLD.ETIKETAD,:OLD.YABAD,:OLD.AD1,:OLD.AD2,:OLD.AD3,:OLD.AD4,:OLD.AD5,:OLD.AD6,:OLD.ANAGRUP,:OLD.ALTGRUP1,:OLD.ALTGRUP2,:OLD.ALTGRUP3,:OLD.TBIRGRUP,:OLD.TBIRIM,:OLD.TASIUCR,:OLD.TASDOVKOD,:OLD.EMTIATIPI,:OLD.TEMSUR,:OLD.RESFIROR,:OLD.DOGFIROR,:OLD.TERPLU,:OLD.POSPLU,:OLD.INSERTNO,:OLD.KDVFARKLI,:OLD.URETYER,:OLD.TALINO1,:OLD.URETIL,:OLD.IMALKOD,:OLD.SIPKONTGRP);
  END IF;
END;
/


CREATE OR REPLACE PUBLIC SYNONYM MASK0001 FOR MAIN.MASK0001;


ALTER TABLE MAIN.MASK0001 ADD (
  CONSTRAINT FKSK1001 
  FOREIGN KEY (INSERTNO) 
  REFERENCES MAIN.TAGE0045 (INSNO)
  ENABLE VALIDATE
,  CONSTRAINT FKSK2001 
  FOREIGN KEY (EMTIATIPI) 
  REFERENCES MAIN.TAGE0048 (EMTIATIPI)
  ENABLE VALIDATE
,  CONSTRAINT FKSK3001 
  FOREIGN KEY (TBIRGRUP, TBIRIM) 
  REFERENCES MAIN.TAGE0063 (BIRGRUP, BIRIM)
  ENABLE VALIDATE
,  CONSTRAINT FKSK4001 
  FOREIGN KEY (DEPTNO) 
  REFERENCES MAIN.TAGE0007 (DEPTNO)
  ENABLE VALIDATE);

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON MAIN.MASK0001 TO HAKLAR;
